name: Build and Push Docker image

on:
  push:
    branches:
      - main  # or any other branch you want to trigger the workflow

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: mvacstudio/${{ github.event.repository.name }}:latest
      - name: Discord Webhook Action
        uses: tsickert/discord-webhook@v5.3.0
        if: ${{ success() }}
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          content: ">>> [${{ github.repository }}]\n:white_check_mark:  **container built and pushed**"
      - name: Fetch Workflow Run Details
        if: ${{ failure() }}
        uses: actions/github-script@v5
        with:
          script: |
            const runId = process.env.GITHUB_RUN_ID
            const repo = process.env.GITHUB_REPOSITORY
            const [owner, repoName] = repo.split('/')
            const { data } = await github.rest.actions.getWorkflowRun({
              owner,
              repo: repoName,
              run_id: runId
            })
            return `Error: ${data.conclusion}\nURL: ${data.html_url}`
          result-encoding: string
      - name: Discord Webhook Action
        uses: tsickert/discord-webhook@v5.3.0
        if: ${{ failure() }}
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          content: ">>> [${{ github.repository }}]\n:x:  **failed to build and push container**\n```${{ steps.fetch_workflow_run_details.outputs.result }}```"

  deploy_to_kubernetes:
    name: Deploy to Kubernetes
    needs: build_and_push
    runs-on: ubuntu-latest

    steps:
      - name: Set Kubernetes Context
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}
      - name: Deploy To Cluster
        run: kubectl rollout restart deployment ${{ github.event.repository.name }}-deployment
      - name: Discord Webhook Action
        uses: tsickert/discord-webhook@v5.3.0
        if: ${{ success() }}
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          content: ">>> [${{ github.repository }}]\n:white_check_mark:  **deployment complete**"
      - name: Fetch Workflow Run Details
        if: ${{ failure() }}
        uses: actions/github-script@v5
        with:
          script: |
            const runId = process.env.GITHUB_RUN_ID
            const repo = process.env.GITHUB_REPOSITORY
            const [owner, repoName] = repo.split('/')
            const { data } = await github.rest.actions.getWorkflowRun({
              owner,
              repo: repoName,
              run_id: runId
            })
            return data
          result-encoding: string
      - name: Discord Webhook Action
        uses: tsickert/discord-webhook@v5.3.0
        if: ${{ failure() }}
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          content: ">>> [${{ github.repository }}]\n:x:  **deployment failed**"